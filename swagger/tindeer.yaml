openapi: 3.0.0
info:
  title: Tindeer API
  description: Notre super API pour notre application mobile de rencontre de Rennes
  version: 1.0.0
servers:
  - url: http://localhost:9080/api/v1
    description: Environnement de test Docker
  - url: http://localhost:9090/api/v1
    description: Environnement de test local
components:
  schemas:
    ProfileDto:
      type: object
      properties:
        id:
          type: string
        userId:
          type: string
        mail:
          type: string
        age:
          type: integer
        firstname:
          type: string
        lastname:
          type: string
        created:
          type: integer
        updated:
          type: integer
    MatchProfileDto:
      type: object
      properties:
        id:
          type: string
        latitude:
          type: number
        longitude:
          type: number
    Matches:
      type: array
      items:
        type: string
  securitySchemes:
    oAuthSample:    # <---- arbitrary name
      type: oauth2
      description: This API uses OAuth 2 with the implicit grant flow. [More info](https://api.example.com/docs/auth)
      flows:
        authorizationCode:   # <---- OAuth flow(authorizationCode, implicit, password or clientCredentials)
          authorizationUrl: http://keycloak:8080/realms/tindeer/protocol/openid-connect/auth
          tokenUrl: http://keycloak:8080/realms/tindeer/protocol/openid-connect/token
          scopes:
            profile: access profile
            email: access email
security: 
  - oAuthSample: 
    - profile
    - email
paths:
  /profiles/current:
    get:
      summary: Return the profile of the current user
      responses:
        '200':    # status code
          description: A JSON array of the user profile
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProfileDto"
  /profiles:
    post:
      summary: Creation of a user profile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                age:
                  type: integer
      responses:
        '201': # status code
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProfileDto"
  /profiles/{id}:
    post:
      summary: Select a profil based on its id
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: id of the wanted profile
      responses:
        '200': # status code
          description: profile returned
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProfileDto"
    put:
      summary: updating your profile
      parameters:
          - in: path
            name: id
            schema:
              type: integer
            required: true
            description: your id
      responses:
        '200': # status code
          description: profile returned
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProfileDto"
  /match:
    get:
      summary: updating your profile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MatchProfileDto"
      responses:
        '200': # status code
          description: matches returned
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Matches"
    put:
      summary: updating your profile
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: your id
      responses:
        '200': # status code
          description: profile returned
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MatchProfileDto"